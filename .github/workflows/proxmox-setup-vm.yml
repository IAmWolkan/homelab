name: "Proxmox Setup VM"

on:
  workflow_dispatch:
    inputs:
      vm-count:
        description: Number of Instances
        type: number
        default: 1
        required: true
      
      vm-id:
          description: VM id (Set this to 0 if it should use next available id)
          type: number
          default: 0
          required: false

      vm-name:
        description: VM name
        default: 'Debian'
        type: string
        required: true
      
      vm-tags:
        description: Tags
        type: string
        default: ''
        required: false

defaults:
  run:
    working-directory: proxmox/terraform

jobs:
  terraform:
    name: "test, plan, and apply terraform changes"

    runs-on: "self-hosted"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Config Terraform plugin cache
        id: plugin-cache
        run: |
          echo 'plugin_cache_dir="$HOME/.terraform.d/plugin-cache"' >~/.terraformrc
          mkdir --parents ~/.terraform.d/plugin-cache

      - name: Cache Terraform
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            ./.terraform.lock.hcl
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config="endpoint=${{ secrets.MINIO_ENDPOINT }}" \
            -backend-config="region=eu-north-1" \
            -backend-config="access_key=${{ secrets.MINIO_ACCESS_KEY }}" \
            -backend-config="secret_key=${{ secrets.MINIO_SECRET_KEY }}" \
            -backend-config="bucket=github-tfstates" \
            -backend-config="key=prx_vm_setup/${{inputs.vm-name}}-${{inputs.vm-id}}.tfstate" \
            -backend-config="skip_credentials_validation=true" \
            -backend-config="skip_requesting_account_id=true" \
            -backend-config="skip_s3_checksum=true" \
            -backend-config="skip_region_validation=true" \
            -backend-config="skip_metadata_api_check=true" \
            -backend-config="use_path_style=true"
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -refresh=true \
            -no-color \
            -input=false \
            -var="PRX_URL=${{ secrets.PRX_URL }}" \
            -var="PRX_API_ID=${{ secrets.PRX_API_TOKEN }}" \
            -var="PRX_API_SECRET=${{ secrets.PRX_API_SECRET }}" \
            -var="PRX_HOST=${{ vars.PRX_HOST }}" \
            -var="PRX_ISO_NAME=${{ vars.PRX_ISO_NAME }}" \
            -var="PRX_STORAGE_NAME=${{ vars.PRX_STORAGE_NAME }}" \
            -var="PRX_VM_COUNT=${{ inputs.vm-count }}" \
            -var="PRX_VM_NAME=${{ inputs.vm-name }}" \
            -var="PRX_VM_TAGS=${{ inputs.vm-tags }}" \
            -var="PRX_VM_ID=${{ inputs.vm-id }}"
        continue-on-error: true

      - name: Terraform Plan Status
        id: status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply \
            -refresh=true \
            -auto-approve \
            -input=false \
            -var="PRX_URL=${{ secrets.PRX_URL }}" \
            -var="PRX_API_ID=${{ secrets.PRX_API_TOKEN }}" \
            -var="PRX_API_SECRET=${{ secrets.PRX_API_SECRET }}" \
            -var="PRX_HOST=${{ vars.PRX_HOST }}" \
            -var="PRX_ISO_NAME=${{ vars.PRX_ISO_NAME }}" \
            -var="PRX_STORAGE_NAME=${{ vars.PRX_STORAGE_NAME }}" \
            -var="PRX_VM_COUNT=${{ inputs.vm-count }}" \
            -var="PRX_VM_NAME=${{ inputs.vm-name }}" \
            -var="PRX_VM_TAGS=${{ inputs.vm-tags }}" \
            -var="PRX_VM_ID=${{ inputs.vm-id }}"
